{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/BtnFeedback.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Title","styled","h1","Section","title","children","Button","button","BtnFeedback","props","type","onClick","text","FeedbackOptions","onLeaveFeedback","Feedback","p","Statistics","good","bad","neutral","total","positivePercentage","Info","Notification","message","Conteiner","div","App","useState","setGood","setNeutral","setBad","countTotalFeedback","isShowStatistics","value","target","textContent","prevGood","prevNeutral","prevBad","toFixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEaA,EAAQC,IAAOC,GAAV,0I,OCcHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,cAACL,EAAD,UAAQI,IACPC,MCLMC,EAASL,IAAOM,OAAV,0JCAZ,SAASC,EAAYC,GAC1B,OACE,cAACH,EAAD,CAAQI,KAAK,SAASC,QAASF,EAAME,QAArC,SACGF,EAAMG,OCFE,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,qCACE,cAACN,EAAD,CAAaI,KAAK,OAAOD,QAASG,IAClC,cAACN,EAAD,CAAaI,KAAK,UAAUD,QAASG,IACrC,cAACN,EAAD,CAAaI,KAAK,MAAMD,QAASG,OCPhC,I,IAAMC,EAAWd,IAAOe,EAAV,2HCoBNC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,eAACP,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBK,KACpB,eAACL,EAAD,mBAAgBI,KAChB,eAACJ,EAAD,qBAAkBM,KACjBF,EAAM,GAAK,eAACJ,EAAD,iCAA8BO,EAA9B,WCTLC,EAAOtB,IAAOe,EAAV,gFCSFQ,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACF,EAAD,UAAOE,KCFHC,EAAYzB,IAAO0B,IAAV,+DCKP,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBW,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAcMC,EAAqB,WACzB,OAAOf,EAAOC,EAAMC,GAOhBc,EAAmBD,IAAuB,EAEhD,OACE,eAACP,EAAD,WACE,cAAC,EAAD,CAAStB,MAAM,wBAAf,SACE,cAACS,EAAD,CAAiBC,gBAzBF,SAAAqB,GACc,SAA7BA,EAAMC,OAAOC,aACfP,GAAQ,SAAAQ,GAAQ,OAAIA,EAAW,KAEA,YAA7BH,EAAMC,OAAOC,aACfN,GAAW,SAAAQ,GAAW,OAAIA,EAAc,KAET,QAA7BJ,EAAMC,OAAOC,aACfL,GAAO,SAAAQ,GAAO,OAAIA,EAAU,UAmB5B,eAAC,EAAD,CAASpC,MAAM,aAAf,UACG8B,GACC,cAAC,EAAD,CACEhB,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTC,MAAOY,IACPX,oBAlBYJ,EAAOe,IAAwB,KACjCQ,aAoBZP,GAAoB,cAAC,EAAD,CAAcT,QAAQ,4B,MC5CpDiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.9c3b05b4.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  padding: 5px;\n  margin-top: 10px;\n  text-transform: capitalize;\n  font-size: 25px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  margin: 5px;\n  text-transform: capitalize;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { Button } from './FeedbackOptions.styled';\n\nexport function BtnFeedback(props) {\n  return (\n    <Button type=\"button\" onClick={props.onClick}>\n      {props.text}\n    </Button>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { BtnFeedback } from 'components/FeedbackOptions/BtnFeedback';\n\nexport default function FeedbackOptions({ onLeaveFeedback }) {\n  return (\n    <>\n      <BtnFeedback text=\"Good\" onClick={onLeaveFeedback} />\n      <BtnFeedback text=\"Neutral\" onClick={onLeaveFeedback} />\n      <BtnFeedback text=\"Bad\" onClick={onLeaveFeedback} />\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nexport const Feedback = styled.p`\n  padding: 4px 8px;\n  border-radius: 4px;\n  text-transform: capitalize;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Feedback } from './Statistics.styled';\n\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\n  return (\n    <>\n      <Feedback>Good: {good}</Feedback>\n      <Feedback>Neutral: {neutral}</Feedback>\n      <Feedback>Bad: {bad}</Feedback>\n      <Feedback>Total: {total}</Feedback>\n      {bad > 0 && <Feedback>Positive Feedback: {positivePercentage}%</Feedback>}\n    </>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styled from '@emotion/styled';\nexport const Info = styled.p`\n  font-size: 20px;\n  padding: 10px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Info } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Info>{message}</Info>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Conteiner = styled.div`\n  padding: 20px;\n  width: 500px;\n`;\n","import { useState } from 'react';\nimport Section from 'components/Section/Section';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nimport { Conteiner } from './App.styled';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const HandlerClick = value => {\n    if (value.target.textContent === 'Good') {\n      setGood(prevGood => prevGood + 1);\n    }\n    if (value.target.textContent === 'Neutral') {\n      setNeutral(prevNeutral => prevNeutral + 1);\n    }\n    if (value.target.textContent === 'Bad') {\n      setBad(prevBad => prevBad + 1);\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + bad + neutral;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = (good / countTotalFeedback()) * 100;\n    return percentage.toFixed();\n  };\n\n  const isShowStatistics = countTotalFeedback() > 0;\n\n  return (\n    <Conteiner>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={HandlerClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {isShowStatistics && (\n          <Statistics\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n        {!isShowStatistics && <Notification message=\"No feedback given\" />}\n      </Section>\n    </Conteiner>\n  );\n}\n\n// export default class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   onLeaveFeedback = value => {\n//     this.setState(prevState => ({\n//       [value]: prevState[value] + 1,\n//     }));\n//   };\n\n//   countTotalFeedback = () => {\n//     return this.state.good + this.state.bad + this.state.neutral;\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     const percentage = (this.state.good / this.countTotalFeedback()) * 100;\n//     return percentage.toFixed();\n//   };\n\n//   render() {\n//     const { good, bad, neutral } = this.state;\n//     const isShowStatistics = this.countTotalFeedback() > 0;\n//     const opltions = Object.keys(this.state);\n\n//     return (\n//       <Conteiner>\n//         <Section title=\"Please leave feedback\">\n//           <FeedbackOptions\n//             options={opltions}\n//             onLeaveFeedback={this.onLeaveFeedback}\n//           />\n//         </Section>\n//         <Section title=\"Statistics\">\n//           {isShowStatistics && (\n//             <Statistics\n//               good={good}\n//               bad={bad}\n//               neutral={neutral}\n//               total={this.countTotalFeedback()}\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\n//             />\n//           )}\n//           {!isShowStatistics && <Notification message=\"No feedback given\" />}\n//         </Section>\n//       </Conteiner>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}