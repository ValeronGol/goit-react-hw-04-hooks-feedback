{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/BtnFeedback.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Title","styled","h1","Section","title","children","Button","button","BtnFeedback","props","type","onClick","text","FeedbackOptions","options","onLeaveFeedback","map","option","shortid","generate","Feedback","ul","FeedbackList","li","Statistics","good","bad","neutral","total","positivePercentage","Info","p","Notification","message","Conteiner","div","App","useState","state","setState","countTotalFeedback","Object","values","reduce","acc","value","isShowStatistics","keys","prevState","percentage","Number","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEaA,EAAQC,IAAOC,GAAV,0I,OCaHC,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,cAACL,EAAD,UAAQI,IACPC,M,iBCLMC,EAASL,IAAOM,OAAV,0JCAZ,SAASC,EAAYC,GAC1B,OACE,cAACH,EAAD,CAAQI,KAAK,SAASC,QAASF,EAAME,QAArC,SACGF,EAAMG,OCDE,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACT,EAAD,CAEEI,KAAMK,EACNN,QAAS,kBAAMI,EAAgBE,KAF1BC,IAAQC,iBCRhB,I,IAAMC,EAAWnB,IAAOoB,GAAV,iDAIRC,EAAerB,IAAOsB,GAAV,2HCkBVC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,eAACT,EAAD,WACE,eAACE,EAAD,oBAAqBG,KACrB,eAACH,EAAD,uBAAwBK,KACxB,eAACL,EAAD,mBAAoBI,KACpB,eAACJ,EAAD,qBAAsBM,KACrBF,EAAM,GACL,eAACJ,EAAD,iCAAkCO,EAAlC,WCVKC,EAAO7B,IAAO8B,EAAV,gFCSFC,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,EAAD,UAAOG,KCFHC,EAAYjC,IAAOkC,IAAV,+DCKP,SAASC,IACtB,MAA0BC,mBAAS,CAAEZ,KAAM,EAAGE,QAAS,EAAGD,IAAK,IAA/D,mBAAOY,EAAP,KAAcC,EAAd,KACQd,EAAuBa,EAAvBb,KAAME,EAAiBW,EAAjBX,QAASD,EAAQY,EAARZ,IAMjBc,EAAqB,WACzB,OAAOC,OAAOC,OAAOJ,GAAOK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAO5DC,EAAmBN,IAAuB,EAC1C1B,EAAU2B,OAAOM,KAAKT,GAE5B,OACE,eAACJ,EAAD,WACE,cAAC,EAAD,CAAS9B,MAAM,wBAAf,SACE,cAACS,EAAD,CAAiBC,QAASA,EAASC,gBAlBjB,SAAA8B,GACtBN,GAAS,SAAAS,GAAS,kCAAUA,GAAV,kBAAsBH,EAAQG,EAAUH,GAAS,YAmBjE,eAAC,EAAD,CAASzC,MAAM,aAAf,UACG0C,GACC,cAAC,EAAD,CACEpB,IAAKA,EACLD,KAAMA,EACNE,QAASA,EACTC,MAAOY,IACPX,mBApB8B,WACtC,IAAMoB,EAAcxB,EAAOe,IAAwB,IACnD,OAAOU,OAAOD,EAAWE,WAkBGC,MAGtBN,GAAoB,cAAC,EAAD,CAAcb,QAAQ,4B,MCpCpDoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnB,EAAD,MAEFoB,SAASC,eAAe,W","file":"static/js/main.974072dc.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  padding: 5px;\n  margin-top: 10px;\n  text-transform: capitalize;\n  font-size: 25px;\n  font-weight: 700;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  margin: 5px;\n  text-transform: capitalize;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { Button } from './FeedbackOptions.styled';\n\nexport function BtnFeedback(props) {\n  return (\n    <Button type=\"button\" onClick={props.onClick}>\n      {props.text}\n    </Button>\n  );\n}\n","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport { BtnFeedback } from 'components/FeedbackOptions/BtnFeedback';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <BtnFeedback\r\n          key={shortid.generate()}\r\n          text={option}\r\n          onClick={() => onLeaveFeedback(option)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n","import styled from '@emotion/styled';\nexport const Feedback = styled.ul`\n  list-style: none;\n`;\n\nexport const FeedbackList = styled.li`\n  padding: 4px 8px;\n  border-radius: 4px;\n  text-transform: capitalize;\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Feedback, FeedbackList } from './Statistics.styled';\n\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\n  return (\n    <Feedback>\n      <FeedbackList>Good: {good}</FeedbackList>\n      <FeedbackList>Neutral: {neutral}</FeedbackList>\n      <FeedbackList>Bad: {bad}</FeedbackList>\n      <FeedbackList>Total: {total}</FeedbackList>\n      {bad > 0 && (\n        <FeedbackList>Positive Feedback: {positivePercentage}%</FeedbackList>\n      )}\n    </Feedback>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import styled from '@emotion/styled';\nexport const Info = styled.p`\n  font-size: 20px;\n  padding: 10px;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\nimport { Info } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Info>{message}</Info>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Conteiner = styled.div`\n  padding: 20px;\n  width: 500px;\n`;\n","import { useState } from 'react';\nimport Section from 'components/Section/Section';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nimport { Conteiner } from './App.styled';\n\nexport default function App() {\n  const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\n  const { good, neutral, bad } = state;\n\n  const onLeaveFeedback = value => {\n    setState(prevState => ({ ...prevState, [value]: prevState[value] + 1 }));\n  };\n\n  const countTotalFeedback = () => {\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = (good / countTotalFeedback()) * 100;\n    return Number(percentage.toFixed());\n  };\n\n  const isShowStatistics = countTotalFeedback() > 0;\n  const options = Object.keys(state);\n\n  return (\n    <Conteiner>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onLeaveFeedback} />\n      </Section>\n      <Section title=\"Statistics\">\n        {isShowStatistics && (\n          <Statistics\n            bad={bad}\n            good={good}\n            neutral={neutral}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n        {!isShowStatistics && <Notification message=\"No feedback given\" />}\n      </Section>\n    </Conteiner>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}