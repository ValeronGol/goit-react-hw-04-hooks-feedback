{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Title","styled","h1","Section","title","children","Button","button","FeedbackOptions","feedbackAdd","event","props","onLeaveFeedback","target","getAttribute","options","this","map","option","type","name","onClick","shortid","generate","Component","Feedback","p","Statistics","good","bad","neutral","total","positivePercentage","Info","Notification","message","Conteiner","div","App","state","value","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","isShowStatistics","opltions","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEaA,EAAQC,IAAOC,GAAV,0I,OCcHC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,cAACL,EAAD,UAAQI,IACPC,M,iBCLMC,EAASL,IAAOM,OAAV,0JCGEC,E,4MACnBC,YAAc,SAAAC,GACZ,EAAKC,MAAMC,gBAAgBF,EAAMG,OAAOC,aAAa,U,4CAGvD,WAAU,IAAD,OACCC,EAAYC,KAAKL,MAAjBI,QACR,OACE,mCACGA,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACZ,EAAD,CACEa,KAAK,SACLC,KAAMF,EACNG,QAAS,EAAKZ,YAHhB,SAMGS,GAFII,IAAQC,qB,GAdoBC,aCJhCC,EAAWxB,IAAOyB,EAAV,2HCoBNC,EAlBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,eAACP,EAAD,oBAAiBG,KACjB,eAACH,EAAD,uBAAoBK,KACpB,eAACL,EAAD,mBAAgBI,KAChB,eAACJ,EAAD,qBAAkBM,KACjBF,EAAM,GAAK,eAACJ,EAAD,iCAA8BO,EAA9B,WCTLC,EAAOhC,IAAOyB,EAAV,gFCSFQ,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACF,EAAD,UAAOE,KCFHC,EAAYnC,IAAOoC,IAAV,+DCKDC,E,4MACnBC,MAAQ,CACNX,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAEPjB,gBAAkB,SAAA4B,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAQE,EAAUF,GAAS,O,EAIhCG,mBAAqB,WACnB,OAAO,EAAKJ,MAAMX,KAAO,EAAKW,MAAMV,IAAM,EAAKU,MAAMT,S,EAGvDc,gCAAkC,WAEhC,OADoB,EAAKL,MAAMX,KAAO,EAAKe,qBAAwB,KACjDE,W,4CAGpB,WACE,MAA+B7B,KAAKuB,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,QACbgB,EAAmB9B,KAAK2B,qBAAuB,EAC/CI,EAAWC,OAAOC,KAAKjC,KAAKuB,OAElC,OACE,eAACH,EAAD,WACE,cAAC,EAAD,CAAShC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEW,QAASgC,EACTnC,gBAAiBI,KAAKJ,oBAG1B,eAAC,EAAD,CAASR,MAAM,aAAf,UACG0C,GACC,cAAC,EAAD,CACElB,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTC,MAAOf,KAAK2B,qBACZX,mBAAoBhB,KAAK4B,qCAG3BE,GAAoB,cAAC,EAAD,CAAcX,QAAQ,gC,GA5CrBX,a,MCFjC0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.23647dcf.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Title = styled.h1`\r\n  padding: 5px;\r\n  margin-top: 10px;\r\n  text-transform: capitalize;\r\n  font-size: 25px;\r\n  font-weight: 700;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Title } from './Section.styled';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  margin: 5px;\n  text-transform: capitalize;\n  &:first-letter {\n    text-transform: uppercase;\n  }\n`;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport { Button } from './FeedbackOptions.styled';\n\nexport default class FeedbackOptions extends Component {\n  feedbackAdd = event => {\n    this.props.onLeaveFeedback(event.target.getAttribute('name'));\n  };\n\n  render() {\n    const { options } = this.props;\n    return (\n      <>\n        {options.map(option => (\n          <Button\n            type=\"button\"\n            name={option}\n            onClick={this.feedbackAdd}\n            key={shortid.generate()}\n          >\n            {option}\n          </Button>\n        ))}\n      </>\n    );\n  }\n}\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import styled from '@emotion/styled';\r\nexport const Feedback = styled.p`\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  text-transform: capitalize;\r\n  font-size: 20px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Feedback } from './Statistics.styled';\r\n\r\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <Feedback>Good: {good}</Feedback>\r\n      <Feedback>Neutral: {neutral}</Feedback>\r\n      <Feedback>Bad: {bad}</Feedback>\r\n      <Feedback>Total: {total}</Feedback>\r\n      {bad > 0 && <Feedback>Positive Feedback: {positivePercentage}%</Feedback>}\r\n    </>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import styled from '@emotion/styled';\r\nexport const Info = styled.p`\r\n  font-size: 20px;\r\n  padding: 10px;\r\n  margin: 0;\r\n`;\r\n","import PropTypes from 'prop-types';\nimport { Info } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Info>{message}</Info>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import styled from '@emotion/styled';\r\n\r\nexport const Conteiner = styled.div`\r\n  padding: 20px;\r\n  width: 500px;\r\n`;\r\n","import { Component } from 'react';\nimport Section from 'components/Section/Section';\nimport FeedbackOptions from 'components/FeedbackOptions/FeedbackOptions';\nimport Statistics from 'components/Statistics/Statistics';\nimport Notification from 'components/Notification/Notification';\nimport { Conteiner } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onLeaveFeedback = value => {\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.bad + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = (this.state.good / this.countTotalFeedback()) * 100;\n    return percentage.toFixed();\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n    const isShowStatistics = this.countTotalFeedback() > 0;\n    const opltions = Object.keys(this.state);\n\n    return (\n      <Conteiner>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={opltions}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {isShowStatistics && (\n            <Statistics\n              good={good}\n              bad={bad}\n              neutral={neutral}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n          {!isShowStatistics && <Notification message=\"No feedback given\" />}\n        </Section>\n      </Conteiner>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}